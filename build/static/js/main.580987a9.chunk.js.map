{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","Card","className","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","prompt","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","src","FormControl","TextField","placeholder","style","margin","InputLabelProps","shrink","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVA4BeA,EAjBCC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QAEnBC,EAF+C,EAAnBC,WAENF,EAAQE,SAEpC,OACI,qBAAKH,IAAKA,EAAV,SACI,cAACI,EAAA,EAAD,CAAMC,UAAWH,EAAS,oBAAsB,qBAAhD,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAYC,MAAQ,QAAQC,QAAQ,KAAKC,UAAU,MAAnD,WACMR,GAAD,UAAcD,EAAQE,SAAtB,MADL,IAC0CF,EAAQA,oB,QCNvDU,EAZKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,Y,kCC6DRC,MA/Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiByB,EAAjB,KA8BA,OAxBAC,qBAAU,WAERD,EAAYE,OAAO,6BAElB,IAEHD,qBAAU,WACRlB,EAAGoB,WAAW,YAAYC,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC/DP,EAAYO,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAGD,EAAIC,GAAIrC,QAASoC,EAAIE,iBAEhE,IAeD,sBAAKlC,UAAY,MAAjB,UACE,qBAAKmC,IAAK,6GACV,uCAGA,2CAAcrC,EAAd,OAEA,cAAC,IAAD,UAEEuB,EAASU,KAAI,gBAAEE,EAAF,EAAEA,GAAIrC,EAAN,EAAMA,QAAN,OACX,cAAC,EAAD,CAAoBE,SAAYA,EAAUF,QAAWA,GAArCqC,QAKpB,sBAAMjC,UAAY,YAAlB,SACA,eAACoC,EAAA,EAAD,CAAapC,UAAW,mBAAxB,UACI,cAACqC,EAAA,EAAD,CAAWrC,UAAY,aAAasC,YAAY,kBAAkBL,GAAK,oBAAoBM,MAAO,CAAEC,OAAQ,GAAKC,gBAAiB,CAAEC,QAAQ,GAAQF,OAAO,SAASG,MAASxB,EAAOyB,SAAY,SAAAC,GAAK,OAAIzB,EAASyB,EAAMC,OAAOH,UAC7N,cAACI,EAAA,EAAD,CAAY/C,UAAY,kBAAkBgD,UAAa7B,EAAOf,QAAQ,YAAYD,MAAM,UAAU8C,KAAO,SAASC,QA/BxG,SAACL,GAElBA,EAAMM,iBACN7C,EAAGoB,WAAW,YAAY0B,IAAI,CAC5BxD,QAASuB,EACTrB,SAAUA,EACVuD,UAAW9C,IAASS,UAAUsC,WAAWC,oBAE3CjC,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAACvB,SAAUA,EAAUF,QAASuB,MACxDC,EAAS,KAsBF,SACI,cAAC,IAAD,eCnDDoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.580987a9.chunk.js","sourcesContent":["// es7 snippets\r\nimport './Message.css';\r\nimport React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\n//import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { forwardRef } from 'react';\r\n//import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst Message = forwardRef(({message, username}, ref) => {\r\n\r\n    const isUser = username === message.username;\r\n\r\n    return (\r\n        <div ref={ref}>\r\n            <Card className={isUser ? \"message__userCard\" : 'message__guestCard'}>\r\n                <CardContent>\r\n                    <Typography color = \"white\" variant=\"h6\" component=\"h10\">\r\n                        {!isUser && `${message.username} :`} {message.message}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>     \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Message;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBHz-fR22N_KNKZJisEwJ40GipYtxWmmRc\",\r\n    authDomain: \"facebook-messenger-clone-a2cad.firebaseapp.com\",\r\n    projectId: \"facebook-messenger-clone-a2cad\",\r\n    storageBucket: \"facebook-messenger-clone-a2cad.appspot.com\",\r\n    messagingSenderId: \"505003420938\",\r\n    appId: \"1:505003420938:web:b39f1980d9e57e91731ef3\",\r\n    measurementId: \"G-VN5XXNWK4L\"\r\n  });\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;","import './App.css';\nimport { Input, IconButton, Button, FormControl, InputLabel, FormHelperText } from '@material-ui/core';\nimport React, {useState, useEffect} from 'react';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move'\nimport SendIcon from '@material-ui/icons/Send';\nimport TextField from '@material-ui/core/TextField';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n\n\n  // useState is variable in React\n  // useEffect ia a code snippet that is executed on a condition\n\n  useEffect(() => {\n    //const name = promt('Please enter your Name')\n    setUsername(prompt('Please enter your name'))\n    \n  }, [])\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot =>{\n      setMessages(snapshot.docs.map(doc => ({id:doc.id, message: doc.data()})))\n    })\n  }, [])\n\n  const sendMessage = (event) => {\n     //send message logic\n     event.preventDefault();\n     db.collection('messages').add({\n       message: input,\n       username: username,\n       timestamp: firebase.firestore.FieldValue.serverTimestamp()\n     })\n     setMessages([...messages, {username: username, message: input}]);\n     setInput('');\n  }\n\n  return (\n    <div className = 'App'>\n      <img src =\"https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=200&h=200\"/>\n      <h1>\n        Hello\n      </h1>\n      <h2> Welcome {username} </h2>\n\n      <FlipMove>\n      {\n        messages.map(({id, message}) => (\n          <Message key = {id} username = {username} message = {message}/>\n        ))\n      }\n      </FlipMove>\n\n      <form className = \"app__form\">\n      <FormControl className= \"app__formControl\">\n          <TextField className = \"app__input\" placeholder=\"Enter a message\" id = \"filled-full-width\" style={{ margin: 8 }} InputLabelProps={{ shrink: true,}} margin=\"normal\" value = {input} onChange = {event => setInput(event.target.value)} />\n            <IconButton className = \"app__iconButton\" disabled = {!input} variant=\"contained\" color=\"primary\" type = 'submit' onClick = {sendMessage} >\n                <SendIcon />\n            </IconButton>\n        </FormControl>\n      \n      </form>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}